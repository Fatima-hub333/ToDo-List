"use strict";(self.webpackChunktodo_list=self.webpackChunktodo_list||[]).push([[826],{426:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),i=t.n(r),o=t(645),a=t.n(o)()(i());a.push([n.id,"html,\r\nbody {\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 0%;\r\n  margin: 0%;\r\n}\r\n\r\nbody {\r\n  background-color: rgb(178, 204, 204);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.list-title {\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  font-family: monospace;\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n}\r\n\r\n.list-title > * {\r\n  margin: 0% 8px;\r\n}\r\n\r\n.undo {\r\n  background-color: unset;\r\n  padding: 0%;\r\n  border: none;\r\n  outline: none;\r\n}\r\n\r\n.template {\r\n  max-width: 400px;\r\n  width: auto;\r\n  min-width: 280px;\r\n  height: auto;\r\n  min-height: 180px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: 1px 1px 10px rgb(0, 0, 0, 0.3);\r\n}\r\n\r\nul,\r\nli {\r\n  list-style: none;\r\n  padding: 0%;\r\n  margin: 0%;\r\n  display: flex;\r\n  width: 100%;\r\n}\r\n\r\nul {\r\n  flex-direction: column;\r\n}\r\n\r\n.list {\r\n  width: 100%;\r\n  height: auto;\r\n  min-height: 40px;\r\n  align-items: center;\r\n}\r\n\r\n.list > li {\r\n  width: 100%;\r\n  min-height: 40px;\r\n  height: auto;\r\n  justify-content: space-evenly;\r\n}\r\n\r\n.list > li > * {\r\n  border: none;\r\n  outline: none;\r\n}\r\n\r\n.list > li > input {\r\n  max-width: 300px;\r\n  width: auto;\r\n  min-width: 240px;\r\n  height: auto;\r\n  font-size: 18px;\r\n  font-weight: 100;\r\n  font-style: italic;\r\n  font-family: monospace;\r\n}\r\n\r\n.list > li > textarea {\r\n  max-width: 300px;\r\n  width: auto;\r\n  min-width: 240px;\r\n  padding-top: 8px;\r\n  font-size: 18px;\r\n  font-weight: 100;\r\n  -ms-overflow-style: none;  /* IE and Edge */\r\n  scrollbar-width: none; /* Firefox */\r\n}\r\n\r\n.list > li > textarea::-webkit-scrollbar {\r\n  display: none; /* Chrome, Safari & Opera */\r\n}\r\n\r\n.list > li > button {\r\n  width: 10px;\r\n  height: 10px;\r\n  align-self: center;\r\n  padding: 0%;\r\n  background-color: unset;\r\n}\r\n\r\n.list-items > li > button {\r\n  background-color: rgb(0, 0, 0, 0.15);\r\n  border-radius: 5px;\r\n}\r\n\r\n.check {\r\n  background-color: rgb(0, 102, 255) !important;\r\n}\r\n\r\n.list > li > div {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-self: center;\r\n  width: 10px;\r\n  height: 100%;\r\n  padding: 0%;\r\n}\r\n\r\n.list > li > div > * {\r\n  display: none;\r\n  padding: 0%;\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n  color: rgb(3, 3, 3, 0.7);\r\n  height: min-content;\r\n}\r\n\r\na:active {\r\n  color: rgb(3, 3, 3, 0.4);\r\n}\r\n\r\n.clear {\r\n  height: 40px;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.options {\r\n  color: rgb(0, 0, 0, 0.4);\r\n}\r\n\r\np.nothing-to-see-here {\r\n  display: none;\r\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;EAEE,WAAW;EACX,YAAY;EACZ,WAAW;EACX,UAAU;AACZ;;AAEA;EACE,oCAAoC;EACpC,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,8BAA8B;EAC9B,sBAAsB;EACtB,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,uBAAuB;EACvB,WAAW;EACX,YAAY;EACZ,aAAa;AACf;;AAEA;EACE,gBAAgB;EAChB,WAAW;EACX,gBAAgB;EAChB,YAAY;EACZ,iBAAiB;EACjB,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,uBAAuB;EACvB,0CAA0C;AAC5C;;AAEA;;EAEE,gBAAgB;EAChB,WAAW;EACX,UAAU;EACV,aAAa;EACb,WAAW;AACb;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,gBAAgB;EAChB,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,gBAAgB;EAChB,YAAY;EACZ,6BAA6B;AAC/B;;AAEA;EACE,YAAY;EACZ,aAAa;AACf;;AAEA;EACE,gBAAgB;EAChB,WAAW;EACX,gBAAgB;EAChB,YAAY;EACZ,eAAe;EACf,gBAAgB;EAChB,kBAAkB;EAClB,sBAAsB;AACxB;;AAEA;EACE,gBAAgB;EAChB,WAAW;EACX,gBAAgB;EAChB,gBAAgB;EAChB,eAAe;EACf,gBAAgB;EAChB,wBAAwB,GAAG,gBAAgB;EAC3C,qBAAqB,EAAE,YAAY;AACrC;;AAEA;EACE,aAAa,EAAE,2BAA2B;AAC5C;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,WAAW;EACX,uBAAuB;AACzB;;AAEA;EACE,oCAAoC;EACpC,kBAAkB;AACpB;;AAEA;EACE,6CAA6C;AAC/C;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,WAAW;AACb;;AAEA;EACE,aAAa;EACb,WAAW;AACb;;AAEA;EACE,qBAAqB;EACrB,wBAAwB;EACxB,mBAAmB;AACrB;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,uBAAuB;AACzB;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,aAAa;AACf",sourcesContent:["html,\r\nbody {\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 0%;\r\n  margin: 0%;\r\n}\r\n\r\nbody {\r\n  background-color: rgb(178, 204, 204);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.list-title {\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  font-family: monospace;\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n}\r\n\r\n.list-title > * {\r\n  margin: 0% 8px;\r\n}\r\n\r\n.undo {\r\n  background-color: unset;\r\n  padding: 0%;\r\n  border: none;\r\n  outline: none;\r\n}\r\n\r\n.template {\r\n  max-width: 400px;\r\n  width: auto;\r\n  min-width: 280px;\r\n  height: auto;\r\n  min-height: 180px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: 1px 1px 10px rgb(0, 0, 0, 0.3);\r\n}\r\n\r\nul,\r\nli {\r\n  list-style: none;\r\n  padding: 0%;\r\n  margin: 0%;\r\n  display: flex;\r\n  width: 100%;\r\n}\r\n\r\nul {\r\n  flex-direction: column;\r\n}\r\n\r\n.list {\r\n  width: 100%;\r\n  height: auto;\r\n  min-height: 40px;\r\n  align-items: center;\r\n}\r\n\r\n.list > li {\r\n  width: 100%;\r\n  min-height: 40px;\r\n  height: auto;\r\n  justify-content: space-evenly;\r\n}\r\n\r\n.list > li > * {\r\n  border: none;\r\n  outline: none;\r\n}\r\n\r\n.list > li > input {\r\n  max-width: 300px;\r\n  width: auto;\r\n  min-width: 240px;\r\n  height: auto;\r\n  font-size: 18px;\r\n  font-weight: 100;\r\n  font-style: italic;\r\n  font-family: monospace;\r\n}\r\n\r\n.list > li > textarea {\r\n  max-width: 300px;\r\n  width: auto;\r\n  min-width: 240px;\r\n  padding-top: 8px;\r\n  font-size: 18px;\r\n  font-weight: 100;\r\n  -ms-overflow-style: none;  /* IE and Edge */\r\n  scrollbar-width: none; /* Firefox */\r\n}\r\n\r\n.list > li > textarea::-webkit-scrollbar {\r\n  display: none; /* Chrome, Safari & Opera */\r\n}\r\n\r\n.list > li > button {\r\n  width: 10px;\r\n  height: 10px;\r\n  align-self: center;\r\n  padding: 0%;\r\n  background-color: unset;\r\n}\r\n\r\n.list-items > li > button {\r\n  background-color: rgb(0, 0, 0, 0.15);\r\n  border-radius: 5px;\r\n}\r\n\r\n.check {\r\n  background-color: rgb(0, 102, 255) !important;\r\n}\r\n\r\n.list > li > div {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-self: center;\r\n  width: 10px;\r\n  height: 100%;\r\n  padding: 0%;\r\n}\r\n\r\n.list > li > div > * {\r\n  display: none;\r\n  padding: 0%;\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n  color: rgb(3, 3, 3, 0.7);\r\n  height: min-content;\r\n}\r\n\r\na:active {\r\n  color: rgb(3, 3, 3, 0.4);\r\n}\r\n\r\n.clear {\r\n  height: 40px;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.options {\r\n  color: rgb(0, 0, 0, 0.4);\r\n}\r\n\r\np.nothing-to-see-here {\r\n  display: none;\r\n}"],sourceRoot:""}]);const s=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,i,o){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(a[A]=!0)}for(var l=0;l<n.length;l++){var c=[].concat(n[l]);r&&a[c[0]]||(void 0!==o&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=o),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),i&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=i):c[4]="".concat(i)),e.push(c))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(i," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var o={},a=[],s=0;s<n.length;s++){var A=n[s],l=r.base?A[0]+r.base:A[0],c=o[l]||0,d="".concat(l," ").concat(c);o[l]=c+1;var u=t(d),p={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var h=i(p,r);r.byIndex=s,e.splice(s,0,{identifier:d,updater:h,references:1})}a.push(d)}return a}function i(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,i){var o=r(n=n||[],i=i||{});return function(n){n=n||[];for(var a=0;a<o.length;a++){var s=t(o[a]);e[s].references--}for(var A=r(n,i),l=0;l<o.length;l++){var c=t(o[l]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}o=A}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,i&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},316:(n,e,t)=>{var r=t(379),i=t.n(r),o=t(795),a=t.n(o),s=t(569),A=t.n(s),l=t(565),c=t.n(l),d=t(216),u=t.n(d),p=t(589),h=t.n(p),m=t(426),E={};E.styleTagTransform=h(),E.setAttributes=c(),E.insert=A().bind(null,"head"),E.domAPI=a(),E.insertStyleElement=u(),i()(m.Z,E),m.Z&&m.Z.locals&&m.Z.locals;class g{constructor(n,e=!1,t=(new Date).getTime()){this.description=n,this.completed=e,this.index=t,this.mouseOver=!1}template(n){const e=document.createElement("li"),t=document.createElement("button"),r=document.createElement("textarea"),i=()=>{this.completed?(r.style.textDecoration="none",r.disabled=!1,t.classList.remove("check"),this.completed=!1):(r.style.textDecoration="line-through",r.disabled=!0,t.classList.add("check"),this.completed=!0),n.updateStorage()};t.addEventListener("click",i),window.addEventListener("load",(()=>{this.completed=!n.list[this.index].completed,i()})),r.value=this.description,r.setAttribute("wrap","soft"),r.setAttribute("maxlength","128"),r.setAttribute("style","resize:none;"),r.setAttribute("onfocus","this.style.height = '0px'; this.style.height = this.scrollHeight +'px'"),r.setAttribute("autofocus","true"),r.setAttribute("spellcheck","false"),r.setAttribute("id",`${this.index}`),r.addEventListener("input",(()=>{n.list[this.index].description=r.value,n.updateStorage()})),r.addEventListener("focusout",(()=>{""===r.value.replace("\n","").replace(" ","")&&(e.remove(),n.removeItem(this))}));const o=document.createElement("label");o.setAttribute("for",`${this.index}`),o.style.display="none";const a=document.createElement("div"),s=document.createElement("i");s.setAttribute("class","fa-solid fa-trash options"),s.addEventListener("click",(()=>{e.remove(),n.removeItem(this)}));const A=document.createElement("i");return A.setAttribute("class","fas fa-ellipsis-v options"),r.addEventListener("focusin",(()=>{s.setAttribute("style","display:block"),A.setAttribute("style","display:none")})),r.addEventListener("focusout",(()=>{this.mouseOver||(s.setAttribute("style","display:none"),A.setAttribute("style","display:block"))})),s.addEventListener("mouseover",(()=>{this.mouseOver=!0})),s.addEventListener("mouseout",(()=>{this.mouseOver=!1})),A.setAttribute("style","display:block;"),a.appendChild(s),a.appendChild(A),e.appendChild(t),e.appendChild(r),e.appendChild(o),e.appendChild(a),e}}const f=document.querySelector(".myapp"),C=document.createElement("div"),B="Today's to-do's:".slice(0,69),x="to-do";C.innerHTML=((n,e,t,r,i)=>`\n  <div class="list-title">\n    <label>${n}</label>\n    <button class="fa-solid fa-arrow-rotate-left undo" id="sort${r}" aria-label="Undo task repositioning"></button>\n  </div>\n  <ul class="list">\n    <li>\n      <input id="${e}" maxlength="128" placeholder="Add a task!" spellcheck="false">\n      <button id="${t}" class="add-item">↵</button>\n    </li>\n  </ul>\n  <ul id="${r}" class="list list-items"></ul>\n  <div class="clear"><a href="#" id="${i}" onclick="return false;">Clear all selected</a></div>\n`)(B,"add-todo","add-task",x,"clear-to-do"),C.classList.add("template"),f.appendChild(C);const b=document.querySelector("#add-todo"),v=document.querySelector("#add-task"),y=document.querySelector("#to-do"),w=document.querySelector("#clear-to-do"),k=new class{constructor(n,e,t="list"){this.ItemType=n,this.storageName=t,this.listName=e,this.list={},this.#n()}#e(n){this.list[n.index]=n}#t(n){delete this.list[n.index]}#r(){localStorage.setItem(this.storageName,JSON.stringify(this.list))}updateStorage(){this.#r()}#n(){if(null===localStorage.getItem(this.storageName))this.#r();else{const n=JSON.parse(localStorage.getItem(this.storageName));Object.values(n).forEach((n=>{this.list[n.index]=new this.ItemType(n.description,n.completed,n.index)}))}}addItem(n){this.#e(n),this.#r()}removeItem(n){this.#t(n),this.#r()}removeSelected(){Object.values(this.list).forEach((n=>{n.completed&&this.removeItem(n)}))}renderItems(){const n=[];return Object.values(this.list).forEach((e=>{n.push(e.template(this))})),n}}(g,x,"list"),W=(n=!1)=>{n?y.appendChild(new g(b.value).template(k)):(y.innerHTML="",k.renderItems().forEach((n=>{setTimeout((()=>{n.querySelector("textarea").dispatchEvent(new Event("focus"))}),0),y.appendChild(n)}))),b.select()};v.addEventListener("click",(()=>{if(""===b.value.replace("\n","").replace(" ",""))return;const n=new g(b.value);((n,e)=>{n.addItem(e)})(k,n),W(!0),b.value=""})),b.addEventListener("keypress",(n=>{"Enter"===n.key&&n.shiftKey||"Enter"===n.key&&v.dispatchEvent(new Event("click"))})),w.addEventListener("click",(()=>{k.removeSelected(),W()})),W()}},n=>{n(n.s=316)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
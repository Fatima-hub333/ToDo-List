"use strict";(self.webpackChunktodo_list=self.webpackChunktodo_list||[]).push([[826],{426:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),i=t.n(r),o=t(645),a=t.n(o)()(i());a.push([n.id,"html,\r\nbody {\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 0%;\r\n  margin: 0%;\r\n}\r\n\r\nbody {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.list-title {\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  font-family: monospace;\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n}\r\n\r\n.list-title > * {\r\n  margin: 0% 8px;\r\n}\r\n\r\n.undo {\r\n  background-color: unset;\r\n  padding: 0%;\r\n  border: none;\r\n  outline: none;\r\n}\r\n\r\n.template {\r\n  max-width: 400px;\r\n  width: auto;\r\n  min-width: 280px;\r\n  height: auto;\r\n  min-height: 180px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: 1px 1px 10px rgb(0, 0, 0, 0.3);\r\n}\r\n\r\nul,\r\nli {\r\n  list-style: none;\r\n  padding: 0%;\r\n  margin: 0%;\r\n  display: flex;\r\n  width: 100%;\r\n}\r\n\r\nul {\r\n  flex-direction: column;\r\n}\r\n\r\n.list {\r\n  width: 100%;\r\n  height: auto;\r\n  min-height: 40px;\r\n  align-items: center;\r\n}\r\n\r\n.list > li {\r\n  width: 100%;\r\n  min-height: 40px;\r\n  height: auto;\r\n  justify-content: space-evenly;\r\n}\r\n\r\n.list > li > * {\r\n  border: none;\r\n  outline: none;\r\n}\r\n\r\n.list > li > input {\r\n  max-width: 300px;\r\n  width: auto;\r\n  min-width: 240px;\r\n  height: auto;\r\n  font-size: 18px;\r\n  font-weight: 100;\r\n  font-style: italic;\r\n  font-family: monospace;\r\n}\r\n\r\n.list > li > textarea {\r\n  max-width: 300px;\r\n  width: auto;\r\n  min-width: 240px;\r\n  padding-top: 8px;\r\n  font-size: 18px;\r\n  font-weight: 100;\r\n  -ms-overflow-style: none;  /* IE and Edge */\r\n  scrollbar-width: none; /* Firefox */\r\n}\r\n\r\n.list > li > textarea::-webkit-scrollbar {\r\n  display: none; /* Chrome, Safari & Opera */\r\n}\r\n\r\n.list > li > button {\r\n  width: 10px;\r\n  height: 10px;\r\n  align-self: center;\r\n  padding: 0%;\r\n  background-color: unset;\r\n}\r\n\r\n.list-items > li > button {\r\n  background-color: rgb(0, 0, 0, 0.15);\r\n  border-radius: 5px;\r\n}\r\n\r\n.check {\r\n  background-color: rgb(0, 102, 255) !important;\r\n}\r\n\r\n.list > li > div {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-self: center;\r\n  width: 10px;\r\n  height: 100%;\r\n  padding: 0%;\r\n}\r\n\r\n.list > li > div > * {\r\n  display: none;\r\n  padding: 0%;\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n  color: rgb(3, 3, 3, 0.7);\r\n  height: min-content;\r\n}\r\n\r\na:active {\r\n  color: rgb(3, 3, 3, 0.4);\r\n}\r\n\r\n.clear {\r\n  height: 40px;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.options {\r\n  color: rgb(0, 0, 0, 0.4);\r\n}\r\n\r\np.nothing-to-see-here {\r\n  display: none;\r\n}\r\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;EAEE,WAAW;EACX,YAAY;EACZ,WAAW;EACX,UAAU;AACZ;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,8BAA8B;EAC9B,sBAAsB;EACtB,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,uBAAuB;EACvB,WAAW;EACX,YAAY;EACZ,aAAa;AACf;;AAEA;EACE,gBAAgB;EAChB,WAAW;EACX,gBAAgB;EAChB,YAAY;EACZ,iBAAiB;EACjB,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,uBAAuB;EACvB,0CAA0C;AAC5C;;AAEA;;EAEE,gBAAgB;EAChB,WAAW;EACX,UAAU;EACV,aAAa;EACb,WAAW;AACb;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,gBAAgB;EAChB,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,gBAAgB;EAChB,YAAY;EACZ,6BAA6B;AAC/B;;AAEA;EACE,YAAY;EACZ,aAAa;AACf;;AAEA;EACE,gBAAgB;EAChB,WAAW;EACX,gBAAgB;EAChB,YAAY;EACZ,eAAe;EACf,gBAAgB;EAChB,kBAAkB;EAClB,sBAAsB;AACxB;;AAEA;EACE,gBAAgB;EAChB,WAAW;EACX,gBAAgB;EAChB,gBAAgB;EAChB,eAAe;EACf,gBAAgB;EAChB,wBAAwB,GAAG,gBAAgB;EAC3C,qBAAqB,EAAE,YAAY;AACrC;;AAEA;EACE,aAAa,EAAE,2BAA2B;AAC5C;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,WAAW;EACX,uBAAuB;AACzB;;AAEA;EACE,oCAAoC;EACpC,kBAAkB;AACpB;;AAEA;EACE,6CAA6C;AAC/C;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,WAAW;AACb;;AAEA;EACE,aAAa;EACb,WAAW;AACb;;AAEA;EACE,qBAAqB;EACrB,wBAAwB;EACxB,mBAAmB;AACrB;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,uBAAuB;AACzB;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,aAAa;AACf",sourcesContent:["html,\r\nbody {\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 0%;\r\n  margin: 0%;\r\n}\r\n\r\nbody {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.list-title {\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  font-family: monospace;\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n}\r\n\r\n.list-title > * {\r\n  margin: 0% 8px;\r\n}\r\n\r\n.undo {\r\n  background-color: unset;\r\n  padding: 0%;\r\n  border: none;\r\n  outline: none;\r\n}\r\n\r\n.template {\r\n  max-width: 400px;\r\n  width: auto;\r\n  min-width: 280px;\r\n  height: auto;\r\n  min-height: 180px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: 1px 1px 10px rgb(0, 0, 0, 0.3);\r\n}\r\n\r\nul,\r\nli {\r\n  list-style: none;\r\n  padding: 0%;\r\n  margin: 0%;\r\n  display: flex;\r\n  width: 100%;\r\n}\r\n\r\nul {\r\n  flex-direction: column;\r\n}\r\n\r\n.list {\r\n  width: 100%;\r\n  height: auto;\r\n  min-height: 40px;\r\n  align-items: center;\r\n}\r\n\r\n.list > li {\r\n  width: 100%;\r\n  min-height: 40px;\r\n  height: auto;\r\n  justify-content: space-evenly;\r\n}\r\n\r\n.list > li > * {\r\n  border: none;\r\n  outline: none;\r\n}\r\n\r\n.list > li > input {\r\n  max-width: 300px;\r\n  width: auto;\r\n  min-width: 240px;\r\n  height: auto;\r\n  font-size: 18px;\r\n  font-weight: 100;\r\n  font-style: italic;\r\n  font-family: monospace;\r\n}\r\n\r\n.list > li > textarea {\r\n  max-width: 300px;\r\n  width: auto;\r\n  min-width: 240px;\r\n  padding-top: 8px;\r\n  font-size: 18px;\r\n  font-weight: 100;\r\n  -ms-overflow-style: none;  /* IE and Edge */\r\n  scrollbar-width: none; /* Firefox */\r\n}\r\n\r\n.list > li > textarea::-webkit-scrollbar {\r\n  display: none; /* Chrome, Safari & Opera */\r\n}\r\n\r\n.list > li > button {\r\n  width: 10px;\r\n  height: 10px;\r\n  align-self: center;\r\n  padding: 0%;\r\n  background-color: unset;\r\n}\r\n\r\n.list-items > li > button {\r\n  background-color: rgb(0, 0, 0, 0.15);\r\n  border-radius: 5px;\r\n}\r\n\r\n.check {\r\n  background-color: rgb(0, 102, 255) !important;\r\n}\r\n\r\n.list > li > div {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-self: center;\r\n  width: 10px;\r\n  height: 100%;\r\n  padding: 0%;\r\n}\r\n\r\n.list > li > div > * {\r\n  display: none;\r\n  padding: 0%;\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n  color: rgb(3, 3, 3, 0.7);\r\n  height: min-content;\r\n}\r\n\r\na:active {\r\n  color: rgb(3, 3, 3, 0.4);\r\n}\r\n\r\n.clear {\r\n  height: 40px;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.options {\r\n  color: rgb(0, 0, 0, 0.4);\r\n}\r\n\r\np.nothing-to-see-here {\r\n  display: none;\r\n}\r\n"],sourceRoot:""}]);const s=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,i,o){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(a[A]=!0)}for(var l=0;l<n.length;l++){var c=[].concat(n[l]);r&&a[c[0]]||(void 0!==o&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=o),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),i&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=i):c[4]="".concat(i)),e.push(c))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(i," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var o={},a=[],s=0;s<n.length;s++){var A=n[s],l=r.base?A[0]+r.base:A[0],c=o[l]||0,d="".concat(l," ").concat(c);o[l]=c+1;var u=t(d),p={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var h=i(p,r);r.byIndex=s,e.splice(s,0,{identifier:d,updater:h,references:1})}a.push(d)}return a}function i(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,i){var o=r(n=n||[],i=i||{});return function(n){n=n||[];for(var a=0;a<o.length;a++){var s=t(o[a]);e[s].references--}for(var A=r(n,i),l=0;l<o.length;l++){var c=t(o[l]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}o=A}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,i&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},316:(n,e,t)=>{var r=t(379),i=t.n(r),o=t(795),a=t.n(o),s=t(569),A=t.n(s),l=t(565),c=t.n(l),d=t(216),u=t.n(d),p=t(589),h=t.n(p),m=t(426),E={};E.styleTagTransform=h(),E.setAttributes=c(),E.insert=A().bind(null,"head"),E.domAPI=a(),E.insertStyleElement=u(),i()(m.Z,E),m.Z&&m.Z.locals&&m.Z.locals;class g{constructor(n,e=!1,t=(new Date).getTime()){this.description=n,this.completed=e,this.index=t,this.mouseOver=!1}template(n){const e=document.createElement("li"),t=document.createElement("button"),r=document.createElement("textarea"),i=()=>{this.completed?(r.style.textDecoration="none",r.disabled=!1,t.classList.remove("check"),this.completed=!1):(r.style.textDecoration="line-through",r.disabled=!0,t.classList.add("check"),this.completed=!0),n.updateStorage()};t.addEventListener("click",i),window.addEventListener("load",(()=>{this.completed=!n.list[this.index].completed,i()})),r.value=this.description,r.setAttribute("wrap","soft"),r.setAttribute("maxlength","128"),r.setAttribute("style","resize:none;"),r.setAttribute("onfocus","this.style.height = '0px'; this.style.height = this.scrollHeight +'px'"),r.setAttribute("autofocus","true"),r.setAttribute("spellcheck","false"),r.setAttribute("id",`${this.index}`),r.addEventListener("input",(()=>{n.list[this.index].description=r.value,n.updateStorage()})),r.addEventListener("focusout",(()=>{""===r.value.replace("\n","").replace(" ","")&&(e.remove(),n.removeItem(this))}));const o=document.createElement("label");o.setAttribute("for",`${this.index}`),o.style.display="none";const a=document.createElement("div"),s=document.createElement("i");s.setAttribute("class","fa-solid fa-trash options"),s.addEventListener("click",(()=>{e.remove(),n.removeItem(this)}));const A=document.createElement("i");return A.setAttribute("class","fas fa-ellipsis-v options"),r.addEventListener("focusin",(()=>{s.setAttribute("style","display:block"),A.setAttribute("style","display:none")})),r.addEventListener("focusout",(()=>{this.mouseOver||(s.setAttribute("style","display:none"),A.setAttribute("style","display:block"))})),s.addEventListener("mouseover",(()=>{this.mouseOver=!0})),s.addEventListener("mouseout",(()=>{this.mouseOver=!1})),A.setAttribute("style","display:block;"),a.appendChild(s),a.appendChild(A),e.appendChild(t),e.appendChild(r),e.appendChild(o),e.appendChild(a),e}}const f=document.querySelector(".myapp"),C=document.createElement("div"),B="Today's to-do's:".slice(0,69),x="to-do";C.innerHTML=((n,e,t,r,i)=>`\n  <div class="list-title">\n    <label>${n}</label>\n    <button class="fa-solid fa-arrow-rotate-left undo" id="sort${r}" aria-label="Undo task repositioning"></button>\n  </div>\n  <ul class="list">\n    <li>\n      <input id="${e}" maxlength="128" placeholder="Add a task!" spellcheck="false">\n      <button id="${t}" class="add-item">↵</button>\n    </li>\n  </ul>\n  <ul id="${r}" class="list list-items"></ul>\n  <div class="clear"><a href="#" id="${i}" onclick="return false;">Clear all selected</a></div>\n`)(B,"add-todo","add-task",x,"clear-to-do"),C.classList.add("template"),f.appendChild(C);const v=document.querySelector("#add-todo"),b=document.querySelector("#add-task"),y=document.querySelector("#to-do"),w=document.querySelector("#clear-to-do"),k=new class{constructor(n,e,t="list"){this.ItemType=n,this.storageName=t,this.listName=e,this.list={},this.#n()}#e(n){this.list[n.index]=n}#t(n){delete this.list[n.index]}#r(){localStorage.setItem(this.storageName,JSON.stringify(this.list))}updateStorage(){this.#r()}#n(){if(null===localStorage.getItem(this.storageName))this.#r();else{const n=JSON.parse(localStorage.getItem(this.storageName));Object.values(n).forEach((n=>{this.list[n.index]=new this.ItemType(n.description,n.completed,n.index)}))}}addItem(n){this.#e(n),this.#r()}removeItem(n){this.#t(n),this.#r()}removeSelected(){Object.values(this.list).forEach((n=>{n.completed&&this.removeItem(n)}))}renderItems(){const n=[];return Object.values(this.list).forEach((e=>{n.push(e.template(this))})),n}}(g,x,"list"),W=(n=!1)=>{n?y.appendChild(new g(v.value).template(k)):(y.innerHTML="",k.renderItems().forEach((n=>{setTimeout((()=>{n.querySelector("textarea").dispatchEvent(new Event("focus"))}),0),y.appendChild(n)}))),v.select()};b.addEventListener("click",(()=>{if(""===v.value.replace("\n","").replace(" ",""))return;const n=new g(v.value);((n,e)=>{n.addItem(e)})(k,n),W(!0),v.value=""})),v.addEventListener("keypress",(n=>{"Enter"===n.key&&n.shiftKey||"Enter"===n.key&&b.dispatchEvent(new Event("click"))})),w.addEventListener("click",(()=>{k.removeSelected(),W()})),W()}},n=>{n(n.s=316)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Qy9CLEdBQXVELEtBQW5EYyxFQUFNYixNQUFNQyxRQUFRLEtBQU0sSUFBSUEsUUFBUSxJQUFLLElBQVksT0FDM0QsTUFBTXFDLEVBQVUsSUFBSXhELEVBQUsrQixFQUFNYixPQXJCakIsRUFBQ2pILEVBQU1JLEtBQ3JCSixFQUFLNkksUUFBUXpJLElBcUJieUksQ0FBUTdJLEVBQU11SixHQUNkTixHQUFPLEdBQ1BuQixFQUFNYixNQUFRLE1BR2hCYSxFQUFNZCxpQkFBaUIsWUFBYXdDLElBQ2hCLFVBQWRBLEVBQU1DLEtBQW1CRCxFQUFNRSxVQUNqQixVQUFkRixFQUFNQyxLQUNSLEVBQU9MLGNBQWMsSUFBSUMsTUFBTSxhQUluQ25CLEVBQVNsQixpQkFBaUIsU0FBUyxLQUNqQ2hILEVBQUs4SSxpQkFDTEcsT0FHRkEsTSIsInNvdXJjZXMiOlsid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9zdHlsZS5jc3M/NzE2MyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvbW9kdWxlcy9saXN0LWl0ZW0uanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9tb2R1bGVzL2h0bWx0ZW1wbGF0ZS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvbW9kdWxlcy9saXN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiaHRtbCxcXHJcXG5ib2R5IHtcXHJcXG4gIHdpZHRoOiAxMDAlO1xcclxcbiAgaGVpZ2h0OiAxMDAlO1xcclxcbiAgcGFkZGluZzogMCU7XFxyXFxuICBtYXJnaW46IDAlO1xcclxcbn1cXHJcXG5cXHJcXG5ib2R5IHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbn1cXHJcXG5cXHJcXG4ubGlzdC10aXRsZSB7XFxyXFxuICB3aWR0aDogMTAwJTtcXHJcXG4gIGhlaWdodDogNDBweDtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcclxcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZTtcXHJcXG4gIGZvbnQtc2l6ZTogMThweDtcXHJcXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XFxyXFxufVxcclxcblxcclxcbi5saXN0LXRpdGxlID4gKiB7XFxyXFxuICBtYXJnaW46IDAlIDhweDtcXHJcXG59XFxyXFxuXFxyXFxuLnVuZG8ge1xcclxcbiAgYmFja2dyb3VuZC1jb2xvcjogdW5zZXQ7XFxyXFxuICBwYWRkaW5nOiAwJTtcXHJcXG4gIGJvcmRlcjogbm9uZTtcXHJcXG4gIG91dGxpbmU6IG5vbmU7XFxyXFxufVxcclxcblxcclxcbi50ZW1wbGF0ZSB7XFxyXFxuICBtYXgtd2lkdGg6IDQwMHB4O1xcclxcbiAgd2lkdGg6IGF1dG87XFxyXFxuICBtaW4td2lkdGg6IDI4MHB4O1xcclxcbiAgaGVpZ2h0OiBhdXRvO1xcclxcbiAgbWluLWhlaWdodDogMTgwcHg7XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gIGJveC1zaGFkb3c6IDFweCAxcHggMTBweCByZ2IoMCwgMCwgMCwgMC4zKTtcXHJcXG59XFxyXFxuXFxyXFxudWwsXFxyXFxubGkge1xcclxcbiAgbGlzdC1zdHlsZTogbm9uZTtcXHJcXG4gIHBhZGRpbmc6IDAlO1xcclxcbiAgbWFyZ2luOiAwJTtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICB3aWR0aDogMTAwJTtcXHJcXG59XFxyXFxuXFxyXFxudWwge1xcclxcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG59XFxyXFxuXFxyXFxuLmxpc3Qge1xcclxcbiAgd2lkdGg6IDEwMCU7XFxyXFxuICBoZWlnaHQ6IGF1dG87XFxyXFxuICBtaW4taGVpZ2h0OiA0MHB4O1xcclxcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG59XFxyXFxuXFxyXFxuLmxpc3QgPiBsaSB7XFxyXFxuICB3aWR0aDogMTAwJTtcXHJcXG4gIG1pbi1oZWlnaHQ6IDQwcHg7XFxyXFxuICBoZWlnaHQ6IGF1dG87XFxyXFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcXHJcXG59XFxyXFxuXFxyXFxuLmxpc3QgPiBsaSA+ICoge1xcclxcbiAgYm9yZGVyOiBub25lO1xcclxcbiAgb3V0bGluZTogbm9uZTtcXHJcXG59XFxyXFxuXFxyXFxuLmxpc3QgPiBsaSA+IGlucHV0IHtcXHJcXG4gIG1heC13aWR0aDogMzAwcHg7XFxyXFxuICB3aWR0aDogYXV0bztcXHJcXG4gIG1pbi13aWR0aDogMjQwcHg7XFxyXFxuICBoZWlnaHQ6IGF1dG87XFxyXFxuICBmb250LXNpemU6IDE4cHg7XFxyXFxuICBmb250LXdlaWdodDogMTAwO1xcclxcbiAgZm9udC1zdHlsZTogaXRhbGljO1xcclxcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZTtcXHJcXG59XFxyXFxuXFxyXFxuLmxpc3QgPiBsaSA+IHRleHRhcmVhIHtcXHJcXG4gIG1heC13aWR0aDogMzAwcHg7XFxyXFxuICB3aWR0aDogYXV0bztcXHJcXG4gIG1pbi13aWR0aDogMjQwcHg7XFxyXFxuICBwYWRkaW5nLXRvcDogOHB4O1xcclxcbiAgZm9udC1zaXplOiAxOHB4O1xcclxcbiAgZm9udC13ZWlnaHQ6IDEwMDtcXHJcXG4gIC1tcy1vdmVyZmxvdy1zdHlsZTogbm9uZTsgIC8qIElFIGFuZCBFZGdlICovXFxyXFxuICBzY3JvbGxiYXItd2lkdGg6IG5vbmU7IC8qIEZpcmVmb3ggKi9cXHJcXG59XFxyXFxuXFxyXFxuLmxpc3QgPiBsaSA+IHRleHRhcmVhOjotd2Via2l0LXNjcm9sbGJhciB7XFxyXFxuICBkaXNwbGF5OiBub25lOyAvKiBDaHJvbWUsIFNhZmFyaSAmIE9wZXJhICovXFxyXFxufVxcclxcblxcclxcbi5saXN0ID4gbGkgPiBidXR0b24ge1xcclxcbiAgd2lkdGg6IDEwcHg7XFxyXFxuICBoZWlnaHQ6IDEwcHg7XFxyXFxuICBhbGlnbi1zZWxmOiBjZW50ZXI7XFxyXFxuICBwYWRkaW5nOiAwJTtcXHJcXG4gIGJhY2tncm91bmQtY29sb3I6IHVuc2V0O1xcclxcbn1cXHJcXG5cXHJcXG4ubGlzdC1pdGVtcyA+IGxpID4gYnV0dG9uIHtcXHJcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigwLCAwLCAwLCAwLjE1KTtcXHJcXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcXHJcXG59XFxyXFxuXFxyXFxuLmNoZWNrIHtcXHJcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigwLCAxMDIsIDI1NSkgIWltcG9ydGFudDtcXHJcXG59XFxyXFxuXFxyXFxuLmxpc3QgPiBsaSA+IGRpdiB7XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxuICBhbGlnbi1zZWxmOiBjZW50ZXI7XFxyXFxuICB3aWR0aDogMTBweDtcXHJcXG4gIGhlaWdodDogMTAwJTtcXHJcXG4gIHBhZGRpbmc6IDAlO1xcclxcbn1cXHJcXG5cXHJcXG4ubGlzdCA+IGxpID4gZGl2ID4gKiB7XFxyXFxuICBkaXNwbGF5OiBub25lO1xcclxcbiAgcGFkZGluZzogMCU7XFxyXFxufVxcclxcblxcclxcbmEge1xcclxcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xcclxcbiAgY29sb3I6IHJnYigzLCAzLCAzLCAwLjcpO1xcclxcbiAgaGVpZ2h0OiBtaW4tY29udGVudDtcXHJcXG59XFxyXFxuXFxyXFxuYTphY3RpdmUge1xcclxcbiAgY29sb3I6IHJnYigzLCAzLCAzLCAwLjQpO1xcclxcbn1cXHJcXG5cXHJcXG4uY2xlYXIge1xcclxcbiAgaGVpZ2h0OiA0MHB4O1xcclxcbiAgd2lkdGg6IDEwMCU7XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG59XFxyXFxuXFxyXFxuLm9wdGlvbnMge1xcclxcbiAgY29sb3I6IHJnYigwLCAwLCAwLCAwLjQpO1xcclxcbn1cXHJcXG5cXHJcXG5wLm5vdGhpbmctdG8tc2VlLWhlcmUge1xcclxcbiAgZGlzcGxheTogbm9uZTtcXHJcXG59XFxyXFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTs7RUFFRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLFdBQVc7RUFDWCxVQUFVO0FBQ1o7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLHVCQUF1QjtFQUN2QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsOEJBQThCO0VBQzlCLHNCQUFzQjtFQUN0QixlQUFlO0VBQ2YsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLHVCQUF1QjtFQUN2QixXQUFXO0VBQ1gsWUFBWTtFQUNaLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixXQUFXO0VBQ1gsZ0JBQWdCO0VBQ2hCLFlBQVk7RUFDWixpQkFBaUI7RUFDakIsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixtQkFBbUI7RUFDbkIsdUJBQXVCO0VBQ3ZCLDBDQUEwQztBQUM1Qzs7QUFFQTs7RUFFRSxnQkFBZ0I7RUFDaEIsV0FBVztFQUNYLFVBQVU7RUFDVixhQUFhO0VBQ2IsV0FBVztBQUNiOztBQUVBO0VBQ0Usc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsV0FBVztFQUNYLFlBQVk7RUFDWixnQkFBZ0I7RUFDaEIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsV0FBVztFQUNYLGdCQUFnQjtFQUNoQixZQUFZO0VBQ1osNkJBQTZCO0FBQy9COztBQUVBO0VBQ0UsWUFBWTtFQUNaLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixXQUFXO0VBQ1gsZ0JBQWdCO0VBQ2hCLFlBQVk7RUFDWixlQUFlO0VBQ2YsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsV0FBVztFQUNYLGdCQUFnQjtFQUNoQixnQkFBZ0I7RUFDaEIsZUFBZTtFQUNmLGdCQUFnQjtFQUNoQix3QkFBd0IsR0FBRyxnQkFBZ0I7RUFDM0MscUJBQXFCLEVBQUUsWUFBWTtBQUNyQzs7QUFFQTtFQUNFLGFBQWEsRUFBRSwyQkFBMkI7QUFDNUM7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsdUJBQXVCO0FBQ3pCOztBQUVBO0VBQ0Usb0NBQW9DO0VBQ3BDLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLDZDQUE2QztBQUMvQzs7QUFFQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxZQUFZO0VBQ1osV0FBVztBQUNiOztBQUVBO0VBQ0UsYUFBYTtFQUNiLFdBQVc7QUFDYjs7QUFFQTtFQUNFLHFCQUFxQjtFQUNyQix3QkFBd0I7RUFDeEIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0Usd0JBQXdCO0FBQzFCOztBQUVBO0VBQ0UsWUFBWTtFQUNaLFdBQVc7RUFDWCxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLG1CQUFtQjtFQUNuQix1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSx3QkFBd0I7QUFDMUI7O0FBRUE7RUFDRSxhQUFhO0FBQ2ZcIixcInNvdXJjZXNDb250ZW50XCI6W1wiaHRtbCxcXHJcXG5ib2R5IHtcXHJcXG4gIHdpZHRoOiAxMDAlO1xcclxcbiAgaGVpZ2h0OiAxMDAlO1xcclxcbiAgcGFkZGluZzogMCU7XFxyXFxuICBtYXJnaW46IDAlO1xcclxcbn1cXHJcXG5cXHJcXG5ib2R5IHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbn1cXHJcXG5cXHJcXG4ubGlzdC10aXRsZSB7XFxyXFxuICB3aWR0aDogMTAwJTtcXHJcXG4gIGhlaWdodDogNDBweDtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcclxcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZTtcXHJcXG4gIGZvbnQtc2l6ZTogMThweDtcXHJcXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XFxyXFxufVxcclxcblxcclxcbi5saXN0LXRpdGxlID4gKiB7XFxyXFxuICBtYXJnaW46IDAlIDhweDtcXHJcXG59XFxyXFxuXFxyXFxuLnVuZG8ge1xcclxcbiAgYmFja2dyb3VuZC1jb2xvcjogdW5zZXQ7XFxyXFxuICBwYWRkaW5nOiAwJTtcXHJcXG4gIGJvcmRlcjogbm9uZTtcXHJcXG4gIG91dGxpbmU6IG5vbmU7XFxyXFxufVxcclxcblxcclxcbi50ZW1wbGF0ZSB7XFxyXFxuICBtYXgtd2lkdGg6IDQwMHB4O1xcclxcbiAgd2lkdGg6IGF1dG87XFxyXFxuICBtaW4td2lkdGg6IDI4MHB4O1xcclxcbiAgaGVpZ2h0OiBhdXRvO1xcclxcbiAgbWluLWhlaWdodDogMTgwcHg7XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gIGJveC1zaGFkb3c6IDFweCAxcHggMTBweCByZ2IoMCwgMCwgMCwgMC4zKTtcXHJcXG59XFxyXFxuXFxyXFxudWwsXFxyXFxubGkge1xcclxcbiAgbGlzdC1zdHlsZTogbm9uZTtcXHJcXG4gIHBhZGRpbmc6IDAlO1xcclxcbiAgbWFyZ2luOiAwJTtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICB3aWR0aDogMTAwJTtcXHJcXG59XFxyXFxuXFxyXFxudWwge1xcclxcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG59XFxyXFxuXFxyXFxuLmxpc3Qge1xcclxcbiAgd2lkdGg6IDEwMCU7XFxyXFxuICBoZWlnaHQ6IGF1dG87XFxyXFxuICBtaW4taGVpZ2h0OiA0MHB4O1xcclxcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG59XFxyXFxuXFxyXFxuLmxpc3QgPiBsaSB7XFxyXFxuICB3aWR0aDogMTAwJTtcXHJcXG4gIG1pbi1oZWlnaHQ6IDQwcHg7XFxyXFxuICBoZWlnaHQ6IGF1dG87XFxyXFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcXHJcXG59XFxyXFxuXFxyXFxuLmxpc3QgPiBsaSA+ICoge1xcclxcbiAgYm9yZGVyOiBub25lO1xcclxcbiAgb3V0bGluZTogbm9uZTtcXHJcXG59XFxyXFxuXFxyXFxuLmxpc3QgPiBsaSA+IGlucHV0IHtcXHJcXG4gIG1heC13aWR0aDogMzAwcHg7XFxyXFxuICB3aWR0aDogYXV0bztcXHJcXG4gIG1pbi13aWR0aDogMjQwcHg7XFxyXFxuICBoZWlnaHQ6IGF1dG87XFxyXFxuICBmb250LXNpemU6IDE4cHg7XFxyXFxuICBmb250LXdlaWdodDogMTAwO1xcclxcbiAgZm9udC1zdHlsZTogaXRhbGljO1xcclxcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZTtcXHJcXG59XFxyXFxuXFxyXFxuLmxpc3QgPiBsaSA+IHRleHRhcmVhIHtcXHJcXG4gIG1heC13aWR0aDogMzAwcHg7XFxyXFxuICB3aWR0aDogYXV0bztcXHJcXG4gIG1pbi13aWR0aDogMjQwcHg7XFxyXFxuICBwYWRkaW5nLXRvcDogOHB4O1xcclxcbiAgZm9udC1zaXplOiAxOHB4O1xcclxcbiAgZm9udC13ZWlnaHQ6IDEwMDtcXHJcXG4gIC1tcy1vdmVyZmxvdy1zdHlsZTogbm9uZTsgIC8qIElFIGFuZCBFZGdlICovXFxyXFxuICBzY3JvbGxiYXItd2lkdGg6IG5vbmU7IC8qIEZpcmVmb3ggKi9cXHJcXG59XFxyXFxuXFxyXFxuLmxpc3QgPiBsaSA+IHRleHRhcmVhOjotd2Via2l0LXNjcm9sbGJhciB7XFxyXFxuICBkaXNwbGF5OiBub25lOyAvKiBDaHJvbWUsIFNhZmFyaSAmIE9wZXJhICovXFxyXFxufVxcclxcblxcclxcbi5saXN0ID4gbGkgPiBidXR0b24ge1xcclxcbiAgd2lkdGg6IDEwcHg7XFxyXFxuICBoZWlnaHQ6IDEwcHg7XFxyXFxuICBhbGlnbi1zZWxmOiBjZW50ZXI7XFxyXFxuICBwYWRkaW5nOiAwJTtcXHJcXG4gIGJhY2tncm91bmQtY29sb3I6IHVuc2V0O1xcclxcbn1cXHJcXG5cXHJcXG4ubGlzdC1pdGVtcyA+IGxpID4gYnV0dG9uIHtcXHJcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigwLCAwLCAwLCAwLjE1KTtcXHJcXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcXHJcXG59XFxyXFxuXFxyXFxuLmNoZWNrIHtcXHJcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigwLCAxMDIsIDI1NSkgIWltcG9ydGFudDtcXHJcXG59XFxyXFxuXFxyXFxuLmxpc3QgPiBsaSA+IGRpdiB7XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxuICBhbGlnbi1zZWxmOiBjZW50ZXI7XFxyXFxuICB3aWR0aDogMTBweDtcXHJcXG4gIGhlaWdodDogMTAwJTtcXHJcXG4gIHBhZGRpbmc6IDAlO1xcclxcbn1cXHJcXG5cXHJcXG4ubGlzdCA+IGxpID4gZGl2ID4gKiB7XFxyXFxuICBkaXNwbGF5OiBub25lO1xcclxcbiAgcGFkZGluZzogMCU7XFxyXFxufVxcclxcblxcclxcbmEge1xcclxcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xcclxcbiAgY29sb3I6IHJnYigzLCAzLCAzLCAwLjcpO1xcclxcbiAgaGVpZ2h0OiBtaW4tY29udGVudDtcXHJcXG59XFxyXFxuXFxyXFxuYTphY3RpdmUge1xcclxcbiAgY29sb3I6IHJnYigzLCAzLCAzLCAwLjQpO1xcclxcbn1cXHJcXG5cXHJcXG4uY2xlYXIge1xcclxcbiAgaGVpZ2h0OiA0MHB4O1xcclxcbiAgd2lkdGg6IDEwMCU7XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG59XFxyXFxuXFxyXFxuLm9wdGlvbnMge1xcclxcbiAgY29sb3I6IHJnYigwLCAwLCAwLCAwLjQpO1xcclxcbn1cXHJcXG5cXHJcXG5wLm5vdGhpbmctdG8tc2VlLWhlcmUge1xcclxcbiAgZGlzcGxheTogbm9uZTtcXHJcXG59XFxyXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTsgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcblxuXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG5cbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcblxuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8IFwiXCIpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuXG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiB1cGRhdGVyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuXG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG5cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuXG4gIGNzcyArPSBvYmouY3NzO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBJdGVtIHtcbiAgY29uc3RydWN0b3IoZGVzY3JpcHRpb24sIGNvbXBsZXRlZCA9IGZhbHNlLCBpbmRleCA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpKSB7XG4gICAgdGhpcy5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uO1xuICAgIHRoaXMuY29tcGxldGVkID0gY29tcGxldGVkO1xuICAgIHRoaXMuaW5kZXggPSBpbmRleDtcbiAgICB0aGlzLm1vdXNlT3ZlciA9IGZhbHNlO1xuICB9XG5cbiAgdGVtcGxhdGUobGlzdCkge1xuICAgIGNvbnN0IGxpID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGknKTtcbiAgICBjb25zdCBjaGVjayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgIGNvbnN0IHRhc2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0ZXh0YXJlYScpO1xuICAgIGNvbnN0IGNoZWNrVGFzayA9ICgpID0+IHtcbiAgICAgIGlmICghdGhpcy5jb21wbGV0ZWQpIHtcbiAgICAgICAgdGFzay5zdHlsZS50ZXh0RGVjb3JhdGlvbiA9ICdsaW5lLXRocm91Z2gnO1xuICAgICAgICB0YXNrLmRpc2FibGVkID0gdHJ1ZTtcbiAgICAgICAgY2hlY2suY2xhc3NMaXN0LmFkZCgnY2hlY2snKTtcbiAgICAgICAgdGhpcy5jb21wbGV0ZWQgPSB0cnVlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGFzay5zdHlsZS50ZXh0RGVjb3JhdGlvbiA9ICdub25lJztcbiAgICAgICAgdGFzay5kaXNhYmxlZCA9IGZhbHNlO1xuICAgICAgICBjaGVjay5jbGFzc0xpc3QucmVtb3ZlKCdjaGVjaycpO1xuICAgICAgICB0aGlzLmNvbXBsZXRlZCA9IGZhbHNlO1xuICAgICAgfVxuICAgICAgbGlzdC51cGRhdGVTdG9yYWdlKCk7XG4gICAgfTtcbiAgICBjaGVjay5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGNoZWNrVGFzayk7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCAoKSA9PiB7XG4gICAgICB0aGlzLmNvbXBsZXRlZCA9ICFsaXN0Lmxpc3RbdGhpcy5pbmRleF0uY29tcGxldGVkO1xuICAgICAgY2hlY2tUYXNrKCk7XG4gICAgfSk7XG4gICAgdGFzay52YWx1ZSA9IHRoaXMuZGVzY3JpcHRpb247XG4gICAgdGFzay5zZXRBdHRyaWJ1dGUoJ3dyYXAnLCAnc29mdCcpO1xuICAgIHRhc2suc2V0QXR0cmlidXRlKCdtYXhsZW5ndGgnLCAnMTI4Jyk7XG4gICAgdGFzay5zZXRBdHRyaWJ1dGUoJ3N0eWxlJywgJ3Jlc2l6ZTpub25lOycpO1xuICAgIHRhc2suc2V0QXR0cmlidXRlKCdvbmZvY3VzJywgJ3RoaXMuc3R5bGUuaGVpZ2h0ID0gXFwnMHB4XFwnOyB0aGlzLnN0eWxlLmhlaWdodCA9IHRoaXMuc2Nyb2xsSGVpZ2h0ICtcXCdweFxcJycpO1xuICAgIHRhc2suc2V0QXR0cmlidXRlKCdhdXRvZm9jdXMnLCAndHJ1ZScpO1xuICAgIHRhc2suc2V0QXR0cmlidXRlKCdzcGVsbGNoZWNrJywgJ2ZhbHNlJyk7XG4gICAgdGFzay5zZXRBdHRyaWJ1dGUoJ2lkJywgYCR7dGhpcy5pbmRleH1gKTtcbiAgICB0YXNrLmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgKCkgPT4ge1xuICAgICAgbGlzdC5saXN0W3RoaXMuaW5kZXhdLmRlc2NyaXB0aW9uID0gdGFzay52YWx1ZTtcbiAgICAgIGxpc3QudXBkYXRlU3RvcmFnZSgpO1xuICAgIH0pO1xuICAgIHRhc2suYWRkRXZlbnRMaXN0ZW5lcignZm9jdXNvdXQnLCAoKSA9PiB7XG4gICAgICBpZiAodGFzay52YWx1ZS5yZXBsYWNlKCdcXG4nLCAnJykucmVwbGFjZSgnICcsICcnKSA9PT0gJycpIHtcbiAgICAgICAgbGkucmVtb3ZlKCk7XG4gICAgICAgIGxpc3QucmVtb3ZlSXRlbSh0aGlzKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICBjb25zdCB0YXNrTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICAgIHRhc2tMYWJlbC5zZXRBdHRyaWJ1dGUoJ2ZvcicsIGAke3RoaXMuaW5kZXh9YCk7XG4gICAgdGFza0xhYmVsLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgY29uc3Qgb3B0aW9ucyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGNvbnN0IGRlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2knKTtcbiAgICBkZWwuc2V0QXR0cmlidXRlKCdjbGFzcycsICdmYS1zb2xpZCBmYS10cmFzaCBvcHRpb25zJyk7XG4gICAgZGVsLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgbGkucmVtb3ZlKCk7XG4gICAgICBsaXN0LnJlbW92ZUl0ZW0odGhpcyk7XG4gICAgfSk7XG4gICAgY29uc3QgbW92ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2knKTtcbiAgICBtb3ZlLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAnZmFzIGZhLWVsbGlwc2lzLXYgb3B0aW9ucycpO1xuICAgIHRhc2suYWRkRXZlbnRMaXN0ZW5lcignZm9jdXNpbicsICgpID0+IHtcbiAgICAgIGRlbC5zZXRBdHRyaWJ1dGUoJ3N0eWxlJywgJ2Rpc3BsYXk6YmxvY2snKTtcbiAgICAgIG1vdmUuc2V0QXR0cmlidXRlKCdzdHlsZScsICdkaXNwbGF5Om5vbmUnKTtcbiAgICB9KTtcbiAgICB0YXNrLmFkZEV2ZW50TGlzdGVuZXIoJ2ZvY3Vzb3V0JywgKCkgPT4ge1xuICAgICAgaWYgKHRoaXMubW91c2VPdmVyKSByZXR1cm47XG4gICAgICBkZWwuc2V0QXR0cmlidXRlKCdzdHlsZScsICdkaXNwbGF5Om5vbmUnKTtcbiAgICAgIG1vdmUuc2V0QXR0cmlidXRlKCdzdHlsZScsICdkaXNwbGF5OmJsb2NrJyk7XG4gICAgfSk7XG4gICAgZGVsLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlb3ZlcicsICgpID0+IHtcbiAgICAgIHRoaXMubW91c2VPdmVyID0gdHJ1ZTtcbiAgICB9KTtcbiAgICBkZWwuYWRkRXZlbnRMaXN0ZW5lcignbW91c2VvdXQnLCAoKSA9PiB7XG4gICAgICB0aGlzLm1vdXNlT3ZlciA9IGZhbHNlO1xuICAgIH0pO1xuICAgIG1vdmUuc2V0QXR0cmlidXRlKCdzdHlsZScsICdkaXNwbGF5OmJsb2NrOycpO1xuICAgIG9wdGlvbnMuYXBwZW5kQ2hpbGQoZGVsKTtcbiAgICBvcHRpb25zLmFwcGVuZENoaWxkKG1vdmUpO1xuXG4gICAgbGkuYXBwZW5kQ2hpbGQoY2hlY2spO1xuICAgIGxpLmFwcGVuZENoaWxkKHRhc2spO1xuICAgIGxpLmFwcGVuZENoaWxkKHRhc2tMYWJlbCk7XG4gICAgbGkuYXBwZW5kQ2hpbGQob3B0aW9ucyk7XG4gICAgcmV0dXJuIGxpO1xuICB9XG59IiwiaW1wb3J0ICcuL3N0eWxlLmNzcyc7XG5cbmltcG9ydCBIVE1MVGVtcGxhdGUgZnJvbSAnLi9tb2R1bGVzL2h0bWx0ZW1wbGF0ZSc7XG5pbXBvcnQgTGlzdCBmcm9tICcuL21vZHVsZXMvbGlzdCc7XG5pbXBvcnQgSXRlbSBmcm9tICcuL21vZHVsZXMvbGlzdC1pdGVtJztcblxuY29uc3QgbXlhcHAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubXlhcHAnKTtcbmNvbnN0IHRlbXBsYXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5jb25zdCBsaXN0VGl0bGUgPSAnVG9kYXlcXCdzIHRvLWRvXFwnczonLnNsaWNlKDAsIDY5KTtcbmNvbnN0IGlucHV0TmFtZSA9ICdhZGQtdG9kbyc7XG5jb25zdCBidG5OYW1lID0gJ2FkZC10YXNrJztcbmNvbnN0IGxpc3ROYW1lID0gJ3RvLWRvJztcbmNvbnN0IGNsZWFyTmFtZSA9IGBjbGVhci0ke2xpc3ROYW1lfWA7XG50ZW1wbGF0ZS5pbm5lckhUTUwgPSBIVE1MVGVtcGxhdGUobGlzdFRpdGxlLCBpbnB1dE5hbWUsIGJ0bk5hbWUsIGxpc3ROYW1lLCBjbGVhck5hbWUpO1xudGVtcGxhdGUuY2xhc3NMaXN0LmFkZCgndGVtcGxhdGUnKTtcbm15YXBwLmFwcGVuZENoaWxkKHRlbXBsYXRlKTtcbmNvbnN0IGlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgIyR7aW5wdXROYW1lfWApO1xuY29uc3QgYnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgIyR7YnRuTmFtZX1gKTtcbmNvbnN0IGRvbUxpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjJHtsaXN0TmFtZX1gKTtcbmNvbnN0IGNsZWFyQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgIyR7Y2xlYXJOYW1lfWApO1xuXG5jb25zdCBsaXN0ID0gbmV3IExpc3QoSXRlbSwgbGlzdE5hbWUsICdsaXN0Jyk7XG5cbmNvbnN0IGFkZEl0ZW0gPSAobGlzdCwgaXRlbSkgPT4ge1xuICBsaXN0LmFkZEl0ZW0oaXRlbSk7XG59O1xuXG5jb25zdCByZW5kZXIgPSAoYWRkZWQgPSBmYWxzZSkgPT4ge1xuICBpZiAoYWRkZWQpIHtcbiAgICBkb21MaXN0LmFwcGVuZENoaWxkKG5ldyBJdGVtKGlucHV0LnZhbHVlKS50ZW1wbGF0ZShsaXN0KSk7XG4gIH0gZWxzZSB7XG4gICAgZG9tTGlzdC5pbm5lckhUTUwgPSAnJztcbiAgICBsaXN0LnJlbmRlckl0ZW1zKCkuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGl0ZW0ucXVlcnlTZWxlY3RvcigndGV4dGFyZWEnKS5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudCgnZm9jdXMnKSk7XG4gICAgICB9LCAwKTtcbiAgICAgIGRvbUxpc3QuYXBwZW5kQ2hpbGQoaXRlbSk7XG4gICAgfSk7XG4gIH1cbiAgaW5wdXQuc2VsZWN0KCk7XG59O1xuXG5idXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gIGlmIChpbnB1dC52YWx1ZS5yZXBsYWNlKCdcXG4nLCAnJykucmVwbGFjZSgnICcsICcnKSA9PT0gJycpIHJldHVybjtcbiAgY29uc3QgbmV3SXRlbSA9IG5ldyBJdGVtKGlucHV0LnZhbHVlKTtcbiAgYWRkSXRlbShsaXN0LCBuZXdJdGVtKTtcbiAgcmVuZGVyKHRydWUpO1xuICBpbnB1dC52YWx1ZSA9ICcnO1xufSk7XG5cbmlucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXByZXNzJywgKGV2ZW50KSA9PiB7XG4gIGlmIChldmVudC5rZXkgPT09ICdFbnRlcicgJiYgZXZlbnQuc2hpZnRLZXkpIHJldHVybjtcbiAgaWYgKGV2ZW50LmtleSA9PT0gJ0VudGVyJykge1xuICAgIGJ1dHRvbi5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudCgnY2xpY2snKSk7XG4gIH1cbn0pO1xuXG5jbGVhckJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgbGlzdC5yZW1vdmVTZWxlY3RlZCgpO1xuICByZW5kZXIoKTtcbn0pO1xuXG5yZW5kZXIoKTsiLCJjb25zdCBIVE1MVGVtcGxhdGUgPSAodGl0bGUsIGlucHV0LCBidG4sIGxpc3QsIGNsZWFyKSA9PiBgXG4gIDxkaXYgY2xhc3M9XCJsaXN0LXRpdGxlXCI+XG4gICAgPGxhYmVsPiR7dGl0bGV9PC9sYWJlbD5cbiAgICA8YnV0dG9uIGNsYXNzPVwiZmEtc29saWQgZmEtYXJyb3ctcm90YXRlLWxlZnQgdW5kb1wiIGlkPVwic29ydCR7bGlzdH1cIiBhcmlhLWxhYmVsPVwiVW5kbyB0YXNrIHJlcG9zaXRpb25pbmdcIj48L2J1dHRvbj5cbiAgPC9kaXY+XG4gIDx1bCBjbGFzcz1cImxpc3RcIj5cbiAgICA8bGk+XG4gICAgICA8aW5wdXQgaWQ9XCIke2lucHV0fVwiIG1heGxlbmd0aD1cIjEyOFwiIHBsYWNlaG9sZGVyPVwiQWRkIGEgdGFzayFcIiBzcGVsbGNoZWNrPVwiZmFsc2VcIj5cbiAgICAgIDxidXR0b24gaWQ9XCIke2J0bn1cIiBjbGFzcz1cImFkZC1pdGVtXCI+4oa1PC9idXR0b24+XG4gICAgPC9saT5cbiAgPC91bD5cbiAgPHVsIGlkPVwiJHtsaXN0fVwiIGNsYXNzPVwibGlzdCBsaXN0LWl0ZW1zXCI+PC91bD5cbiAgPGRpdiBjbGFzcz1cImNsZWFyXCI+PGEgaHJlZj1cIiNcIiBpZD1cIiR7Y2xlYXJ9XCIgb25jbGljaz1cInJldHVybiBmYWxzZTtcIj5DbGVhciBhbGwgc2VsZWN0ZWQ8L2E+PC9kaXY+XG5gO1xuXG5leHBvcnQgZGVmYXVsdCBIVE1MVGVtcGxhdGU7XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBMaXN0IHtcbiAgY29uc3RydWN0b3IoSXRlbVR5cGUsIGxpc3ROYW1lLCBzdG9yYWdlTmFtZSA9ICdsaXN0Jykge1xuICAgIHRoaXMuSXRlbVR5cGUgPSBJdGVtVHlwZTtcbiAgICB0aGlzLnN0b3JhZ2VOYW1lID0gc3RvcmFnZU5hbWU7XG4gICAgdGhpcy5saXN0TmFtZSA9IGxpc3ROYW1lO1xuICAgIHRoaXMubGlzdCA9IHt9O1xuICAgIHRoaXMuI3JldHJpZXZlU3RvcmFnZSgpO1xuICB9XG5cbiAgI2FkZEl0ZW0oaXRlbSkge1xuICAgIHRoaXMubGlzdFtpdGVtLmluZGV4XSA9IGl0ZW07XG4gIH1cblxuICAjcmVtb3ZlSXRlbShpdGVtKSB7XG4gICAgZGVsZXRlIHRoaXMubGlzdFtpdGVtLmluZGV4XTtcbiAgfVxuXG4gICN1cGRhdGVTdG9yYWdlKCkge1xuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKHRoaXMuc3RvcmFnZU5hbWUsIEpTT04uc3RyaW5naWZ5KHRoaXMubGlzdCkpO1xuICB9XG5cbiAgdXBkYXRlU3RvcmFnZSgpIHtcbiAgICB0aGlzLiN1cGRhdGVTdG9yYWdlKCk7XG4gIH1cblxuICAjcmV0cmlldmVTdG9yYWdlKCkge1xuICAgIGlmIChsb2NhbFN0b3JhZ2UuZ2V0SXRlbSh0aGlzLnN0b3JhZ2VOYW1lKSA9PT0gbnVsbCkge1xuICAgICAgdGhpcy4jdXBkYXRlU3RvcmFnZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCB0ZW1wTGlzdCA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0odGhpcy5zdG9yYWdlTmFtZSkpO1xuICAgICAgT2JqZWN0LnZhbHVlcyh0ZW1wTGlzdCkuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgICB0aGlzLmxpc3RbaXRlbS5pbmRleF0gPSBuZXcgdGhpcy5JdGVtVHlwZShpdGVtLmRlc2NyaXB0aW9uLCBpdGVtLmNvbXBsZXRlZCwgaXRlbS5pbmRleCk7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBhZGRJdGVtKGl0ZW0pIHtcbiAgICB0aGlzLiNhZGRJdGVtKGl0ZW0pO1xuICAgIHRoaXMuI3VwZGF0ZVN0b3JhZ2UoKTtcbiAgfVxuXG4gIHJlbW92ZUl0ZW0oaXRlbSkge1xuICAgIHRoaXMuI3JlbW92ZUl0ZW0oaXRlbSk7XG4gICAgdGhpcy4jdXBkYXRlU3RvcmFnZSgpO1xuICB9XG5cbiAgcmVtb3ZlU2VsZWN0ZWQoKSB7XG4gICAgT2JqZWN0LnZhbHVlcyh0aGlzLmxpc3QpLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICAgIGlmIChpdGVtLmNvbXBsZXRlZCkge1xuICAgICAgICB0aGlzLnJlbW92ZUl0ZW0oaXRlbSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICByZW5kZXJJdGVtcygpIHtcbiAgICBjb25zdCByZW5kZXJzID0gW107XG4gICAgT2JqZWN0LnZhbHVlcyh0aGlzLmxpc3QpLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICAgIHJlbmRlcnMucHVzaChpdGVtLnRlbXBsYXRlKHRoaXMpKTtcbiAgICB9KTtcbiAgICByZXR1cm4gcmVuZGVycztcbiAgfVxufSJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZSIsInNvdXJjZVJvb3QiLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsIm9wdGlvbnMiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIkl0ZW0iLCJjb25zdHJ1Y3RvciIsImRlc2NyaXB0aW9uIiwiY29tcGxldGVkIiwiRGF0ZSIsImdldFRpbWUiLCJtb3VzZU92ZXIiLCJ0ZW1wbGF0ZSIsImxpIiwiY2hlY2siLCJ0YXNrIiwiY2hlY2tUYXNrIiwidGV4dERlY29yYXRpb24iLCJkaXNhYmxlZCIsImNsYXNzTGlzdCIsImFkZCIsInVwZGF0ZVN0b3JhZ2UiLCJhZGRFdmVudExpc3RlbmVyIiwidmFsdWUiLCJyZXBsYWNlIiwicmVtb3ZlSXRlbSIsInRhc2tMYWJlbCIsImRpc3BsYXkiLCJkZWwiLCJtb3ZlIiwibXlhcHAiLCJsaXN0VGl0bGUiLCJzbGljZSIsImxpc3ROYW1lIiwiaW5uZXJIVE1MIiwidGl0bGUiLCJpbnB1dCIsImJ0biIsImNsZWFyIiwiZG9tTGlzdCIsImNsZWFyQnRuIiwiSXRlbVR5cGUiLCJzdG9yYWdlTmFtZSIsImxvY2FsU3RvcmFnZSIsInNldEl0ZW0iLCJnZXRJdGVtIiwidGVtcExpc3QiLCJwYXJzZSIsIk9iamVjdCIsInZhbHVlcyIsImZvckVhY2giLCJhZGRJdGVtIiwicmVtb3ZlU2VsZWN0ZWQiLCJyZW5kZXJJdGVtcyIsInJlbmRlcnMiLCJyZW5kZXIiLCJhZGRlZCIsInNldFRpbWVvdXQiLCJkaXNwYXRjaEV2ZW50IiwiRXZlbnQiLCJzZWxlY3QiLCJuZXdJdGVtIiwiZXZlbnQiLCJrZXkiLCJzaGlmdEtleSJdLCJzb3VyY2VSb290IjoiIn0=